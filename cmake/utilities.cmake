function(nox_extract_version)
    file(READ "${CMAKE_CURRENT_LIST_DIR}/include/nox/version.h" FILE_CONTENTS)
    
    string(REGEX MATCH "NOX_VERSION_MAJOR ([0-9]+)" _ "${FILE_CONTENTS}")
    if(NOT CMAKE_MATCH_COUNT EQUAL 1)
        message(FATAL_ERROR "Unable to extract major version number from nox/version.h")
    endif()
    set(VERSION_MAJOR ${CMAKE_MATCH_1})

    string(REGEX MATCH "NOX_VERSION_MINOR ([0-9]+)" _ "${FILE_CONTENTS}")
    if(NOT CMAKE_MATCH_COUNT EQUAL 1)
        message(FATAL_ERROR "Unable extract minor version number from nox/version.h")
    endif()
    set(VERSION_MINOR ${CMAKE_MATCH_1})

    string(REGEX MATCH "NOX_VERSION_PATCH ([0-9]+)" _ "${FILE_CONTENTS}")
    if(NOT CMAKE_MATCH_COUNT EQUAL 1)
        message(FATAL_ERROR "Unable to extract patch version number from nox/version.h")
    endif()
    set(VERSION_PATCH ${CMAKE_MATCH_1})

    set(NOX_VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}" PARENT_SCOPE)
endfunction()

macro(create_project_source_tree TARGET)
    if(MSVC)
        set(PREFIXES ${CMAKE_CURRENT_SOURCE_DIR} ${ARGN} ${PROJECT_SOURCE_DIR})
        get_target_property(SOURCE_LIST ${TARGET} SOURCES)
        foreach(SOURCE_FILE ${SOURCE_LIST})
            if(NOT ${SOURCE_FILE} MATCHES "\<*\>")
                string(TOLOWER ${SOURCE_FILE} SOURCE_FILE_RELATIVE)
                foreach(PREFIX ${PREFIXES})
                    if(SOURCE_FILE_RELATIVE)
                        string(TOLOWER ${PREFIX} PREFIX)
                        string(REPLACE "${PREFIX}" "" SOURCE_FILE_RELATIVE ${SOURCE_FILE_RELATIVE})
                    endif()
                endforeach()

                get_filename_component(SOURCE_PATH_RELATIVE ${SOURCE_FILE_RELATIVE} PATH)
                if(SOURCE_PATH_RELATIVE)
                    string(REPLACE "/" "\\" SOURCE_PATH_RELATIVE ${SOURCE_PATH_RELATIVE})
                endif()
                source_group("${SOURCE_PATH_RELATIVE}" FILES ${SOURCE_FILE})
            endif()
        endforeach()
    endif()
endmacro()

function(list_append_global LIST ITEM)
    set(ITEMS ${ITEM} ${ARGN})
    set(${LIST} "${${LIST}}" ${ITEMS} CACHE INTERNAL "")
endfunction()

